geom_boxplot()+
geom_smooth(method = "lm")+
xlim(0:10)
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth(method = "lm")+
xlim(c(0:10))
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth(method = "lm")+
xlim(c[0:10])
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth(method = "lm")+
xlim(0,10)
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth(method = "lm")+
xlim(1,10)
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth(method = "lm")+
xlim(4,7)
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth(method = "lm")+
xlim(0 , 10)
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth(method = "lm")+
xlim(0 , 10)+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth(method = "lm")+
#xlim(0 , 10)+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
#geom_smooth(method = "lm")+
#xlim(0 , 10)+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth(method ="lm")+
#xlim(0 , 10)+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth()+
#xlim(0 , 10)+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_point()+
geom_smooth()+
#xlim(0 , 10)+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = quality))+
geom_point()+
geom_smooth()+
#xlim(0 , 10)+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = quality))+
geom_point()+
geom_smooth(method = "lm")+
#xlim(0 , 10)+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_point()+
geom_smooth(method = "lm")+
#xlim(0 , 10)+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = quality))+
geom_point()+
geom_smooth(method = "lm")+
xlim(0 , 10)+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = quality))+
geom_boxplot()+
geom_smooth(method = "lm")+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
geom_smooth(method = "lm")+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
scale_color_brewer()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_point()
scale_color_brewer()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_point()+
scale_color_brewer()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
ggplot(data = redwine, aes(y =  sulphates, x = alcohol, colour = factor(quality))) +
geom_point(alpha = 0.2, size = 1) +
geom_smooth(method = "lm", se = FALSE, size = 1)  +
scale_y_continuous(limits = c(0.3, 1.5))
ggplot(data = redwine, aes(y = volatile.acidity , x = alcohol, colour = factor(quality))) +
geom_point(alpha = 0.2, size = 1) +
geom_smooth(method = "lm", se = FALSE, size = 1)  +
scale_y_continuous(limits = c(0.3, 1.5))
ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, size = 1)  +
scale_y_continuous(limits = c(0.3, 1.5))
ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_boxplot() +
geom_smooth(method = "lm", se = FALSE, size = 1)  +
scale_y_continuous(limits = c(0.3, 1.5))
ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality), color = alcohol)) +
geom_boxplot() +
ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality), color = alcohol)) +
geom_boxplot()
ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality), colour = alcohol)) +
geom_boxplot()
ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_boxplot( colour = alcohol)
ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_point( colour = alcohol)
ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_point( ~ alcohol)
ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_boxplot()
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
ggtitle('酒精水平 v/s 质量水平')+
xlab('质量水平(score between 0 and 10)')+
ylab('酒精水平(% by volume)')
ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
p1 <- ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
p2 <- ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_boxplot()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Volatile Acidity Levels(acetic acid - g / dm^3)')
grid.arrange(p1,p2)
p1 <- ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
ggtitle('Alcohol levels v/s Quality levels ')+
ylab('Alcohol Levels(% by volume)')
p2 <- ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_boxplot()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Volatile Acidity Levels(acetic acid - g / dm^3)')
grid.arrange(p1,p2)
p1 <- ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
p2 <- ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_boxplot()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Volatile Acidity Levels(acetic acid - g / dm^3)')
grid.arrange(p1,p2)
p1 <- ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
p2 <- ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_boxplot()+
ggtitle('Alcohol levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Volatile Acidity Levels(acetic acid - g / dm^3)')
grid.arrange(p1,p2,ncol=2)
p1 <- ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
ggtitle('Alcohol Levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
p2 <- ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_boxplot()+
ggtitle('Volatile Acidity Levels v/s Quality levels ')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Volatile Acidity Levels(acetic acid - g / dm^3)')
grid.arrange(p1,p2,ncol=2)
p1 <- ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
ggtitle('Alcohol Levels v/s Quality levels')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
p2 <- ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_boxplot()+
ggtitle('Volatile Acidity Levels v/s Quality levels')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Volatile Acidity Levels(acetic acid - g / dm^3)')
grid.arrange(p1,p2,ncol=2)
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = factor(quality))) +
geom_point(alpha = 0.2, size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1)
knitr::opts_chunk$set(fig.width=12, fig.height=8, fig.path='Figs/',
echo=FALSE, warning=FALSE, message=FALSE)
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(markdown)
library(ggplot2)
library(GGally)
library(gridExtra)
library(knitr)
# 加载数据
redwine <- read.csv("wineQualityReds.csv")
dim(redwine)
summary(redwine)
summary(redwine$quality)
ggplot(data = redwine, aes(x=quality))+
geom_histogram(binwidth = 0.5)+
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, 1))
summary(redwine$alcohol)
ggplot(data=redwine, aes(x=alcohol)) +
geom_histogram(binwidth = .1)+
scale_x_continuous(limits = c(8, 16), breaks = seq(0, 20, 1))
summary(redwine$residual.sugar)
ggplot(data=redwine, aes(x=residual.sugar)) +
geom_histogram(binwidth = .5)+
scale_x_continuous(limits = c(0, 16), breaks = seq(0, 20, 1))
summary(redwine$pH)
ggplot(data=redwine, aes(x=pH)) +
geom_histogram(binwidth = .1)+
scale_x_continuous(limits = c(2.5, 4.5), breaks = seq(0, 5, 0.5))
summary(redwine$citric.acid)
ggplot(data=redwine, aes(x=citric.acid)) +
geom_histogram(binwidth = .01)+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1))
summary(redwine$volatile.acidity)
ggplot(data=redwine, aes(x=volatile.acidity)) +
geom_histogram(binwidth = .05)+
scale_x_continuous(limits = c(0, 1.6), breaks = seq(0, 2, 0.1))
summary(redwine$fixed.acidity)
ggplot(data=redwine, aes(x=fixed.acidity)) +
geom_histogram(binwidth = .1)+
scale_x_continuous(limits = c(4, 16), breaks = seq(0, 20, 1))
summary(redwine$density)
ggplot(data=redwine, aes(x=density)) +
geom_histogram(binwidth = .001)
summary(redwine$sulphates)
ggplot(data=redwine, aes(x=sulphates)) +
geom_histogram(binwidth = .05)
summary(redwine$total.sulfur.dioxide)
ggplot(data=redwine, aes(x=total.sulfur.dioxide)) +
geom_histogram(binwidth = 5)
summary(redwine$free.sulfur.dioxide)
ggplot(data=redwine, aes(x=free.sulfur.dioxide)) +
geom_histogram(binwidth = 1)
summary(redwine$chlorides)
ggplot(data=redwine, aes(x=chlorides)) +
geom_histogram(binwidth = .01)
ggpairs(subset(redwine, select = c(-X)),
upper = list(continuous = wrap("cor", size = 2)),
lower = list(continuous = wrap("smooth",size = 0.5, alpha = .1)))
bp11 <- ggplot(data=redwine, aes(x=factor(quality), y=alcohol))+
geom_boxplot()
bp12 <- ggplot(data=redwine, aes(x=factor(quality), y=volatile.acidity))+
geom_boxplot()
bp13 <- ggplot(data=redwine, aes(x=factor(quality), y=sulphates))+
geom_boxplot()
bp14 <- ggplot(data=redwine, aes(x=factor(quality), y=citric.acid))+
geom_boxplot()
grid.arrange(bp11, bp12, bp13, bp14, ncol = 2, nrow = 2)
summary(lm(quality~alcohol+volatile.acidity+citric.acid+sulphates, redwine))
ggplot(data=redwine, aes(x=free.sulfur.dioxide, y=total.sulfur.dioxide))+
geom_point()+
geom_smooth(method="lm")
bp21 <- ggplot(data = redwine, aes(x = fixed.acidity, y = density)) +
geom_point() +
geom_smooth(method="lm")
bp22 <- ggplot(data = redwine, aes(x = alcohol, y = density)) +
geom_point() +
geom_smooth(method="lm")
grid.arrange(bp21, bp22, ncol = 2)
bp31 <- ggplot(data = redwine, aes(x = fixed.acidity, y = citric.acid)) +
geom_point() +
geom_smooth(method="lm")
bp32 <- ggplot(data = redwine, aes(x = volatile.acidity, y = citric.acid)) +
geom_point()+
geom_smooth(method="lm")
grid.arrange(bp31, bp32, ncol = 2)
ggplot(data=redwine, aes(x=volatile.acidity, y=pH))+
geom_point()+
geom_smooth(method="lm")
ggplot(data = redwine, aes(x = alcohol,y = volatile.acidity, color= quality))+
geom_point()+
facet_wrap(~quality)+
theme_light()
ggplot(data = redwine, aes(y = density, x =  alcohol, color = factor(quality))) +
geom_point(size = 2) +
geom_smooth(method = "lm", se = FALSE, size = 1)+
facet_wrap(~quality)
ggplot(data = redwine, aes(y =  sulphates, x = alcohol, colour = factor(quality))) +
geom_point(alpha = 0.2, size = 1) +
geom_smooth(method = "lm", se = FALSE, size = 1)  +
scale_y_continuous(limits = c(0.3, 1.5))
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = factor(quality))) +
geom_point(alpha = 0.2, size = 1) +
geom_smooth(method = "lm", se = FALSE, size = 1)
p1 <- ggplot(data = redwine, aes(y = alcohol, x = factor(quality)))+
geom_boxplot()+
ggtitle('Alcohol Levels v/s Quality levels')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Alcohol Levels(% by volume)')
p2 <- ggplot(data = redwine, aes(y = volatile.acidity , x = factor(quality))) +
geom_boxplot()+
ggtitle('Volatile Acidity Levels v/s Quality levels')+
xlab('Quality Levels(score between 0 and 10)')+
ylab('Volatile Acidity Levels(acetic acid - g / dm^3)')
grid.arrange(p1,p2,ncol=2)
# 加载你最终使用的所有组件
# 在这个代码块的分析中。
# 注意，在这个代码块中，将参数 "echo" 设为假。
# This prevents the code from displaying in the knitted HTML output.这可以避免代码混入 HTML 输出显示。
# 应当在文件中，对所有代码块设为 echo=FALSE 。
library(markdown)
library(ggplot2)
library(GGally)
library(gridExtra)
library(knitr)
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = factor(quality))) +
geom_point(alpha = 0.2, size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1)
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_point(alpha = 0.2, size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1)
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth(se = TRUE, size = 1)
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth(se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth(se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide") +
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth(se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(data = redwine, aes(x =  free.sulfur.dioxide, y = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth(se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(data = redwine, aes(x =  free.sulfur.dioxide, y = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(data = redwine, aes(x =  free.sulfur.dioxide, y = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
ggtitle('Total_SO2 Versus Free_S02')
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth(method = "lm", se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
ggtitle('Total_SO2 Versus Free_S02')
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth( se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
ggtitle('Total_SO2 Versus Free_S02')
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter( size = 1) +
geom_smooth( se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
ggtitle('Total_SO2 Versus Free_S02')
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = factor(quality)) )+
geom_jitter( size = 1) +
geom_smooth( se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
ggtitle('Total_SO2 Versus Free_S02')
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter( size = 1) +
geom_smooth( se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
ggtitle('Total_SO2 Versus Free_S02')
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth( se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
ggtitle('Total_SO2 Versus Free_S02')
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(aes(x = density, y = alcohol, group = 1),
data = redwine) +
geom_point(alpha = 1/4, position = position_jitter(h = 0)) +
xlab("Alcohol (% by Volume)") +
ylab("Density (g/cm^3)") +
geom_smooth(method = 'lm', color = 'red') +
ggtitle("Density versus Alcohol Content") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(aes(x = density, y = alcohol, group = 1),
data = redwine) +
geom_point(alpha = 1/4, position = position_jitter(h = 0)) +
xlab("Alcohol (% by Volume)") +
ylab("Density (g/cm^3)") +
geom_smooth(method = 'lm') +
ggtitle("Density versus Alcohol Content") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(aes(x = density, y = alcohol, group = 1),
data = redwine) +
geom_point(alpha = 1/4) +
xlab("Alcohol (% by Volume)") +
ylab("Density (g/cm^3)") +
geom_smooth(method = 'lm') +
ggtitle("Density versus Alcohol Content") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(aes(x = density, y = alcohol, group = 1),
data = redwine) +
geom_point(alpha = 1/4) +
xlab("Alcohol (% by Volume)") +
ylab("Density (g/cm^3)") +
geom_smooth(method = 'lm') +
ggtitle("Density versus Alcohol Content")
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth( se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
ggtitle('Total_SO2 Versus Free_S02')
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
ggplot(data = redwine, aes(y =  free.sulfur.dioxide, x = total.sulfur.dioxide, colour = quality)) +
geom_jitter(alpha = 0.2, size = 1) +
geom_smooth( se = TRUE, size = 1)+
scale_x_log10(breaks = c(1, 10, 50))+
scale_y_log10()+
ggtitle('Total_SO2 Versus Free_S02')+
xlab("Log Free Sulphur Dioxide") +
ylab("Log Total Sulphur Dioxide")
